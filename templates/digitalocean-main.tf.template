# Generated Terraform configuration for Wardrobe VPN
# Region: ${REGION}
# Generated by Wardrobe CLI

# Variables
variable "do_token" {
  description = "DigitalOcean API token"
  type        = string
  sensitive   = true
}

variable "my_ip_cidr" {
  description = "Your IP address in CIDR notation"
  type        = string
  default     = "${YOUR_IP}/32"
}

variable "ssh_key_fingerprint" {
  description = "Fingerprint of ssh pub key that already exists on your digitalocean account"
  type = string
}

# Terraform Configuration
terraform {
  required_providers {
    digitalocean = {
      source  = "digitalocean/digitalocean"
      version = "~> 2.0"
    }
  }
}

provider "digitalocean" {
  token = var.do_token
}

# VPN Droplet  
resource "digitalocean_droplet" "vpn_server" {
  name   = "${DEPLOYMENT_NAME}"
  region = "${REGION}"
  image  = "ubuntu-24-04-x64"
  size   = "s-1vcpu-1gb"
  tags   = ["wardrobe-vpn"]
  ssh_keys = [var.ssh_key_fingerprint]
  
  # Cloud-init configuration is pre-processed by CLI
  user_data = file("./digitalocean-cloud-init.yaml")

  # Allow terraform to destroy
  lifecycle {
    prevent_destroy = false
  }
}

# Firewall rules
resource "digitalocean_firewall" "vpn_firewall" {
  name = "wardrobe-vpn-firewall-${DEPLOYMENT_NAME}"
  
  droplet_ids = [digitalocean_droplet.vpn_server.id]
  
  # SSH access - Access from anywhere
  inbound_rule {
    protocol         = "tcp"
    port_range       = "22"
    source_addresses = ["0.0.0.0/0", "::/0"]
  }
  
  # WireGuard VPN port
  inbound_rule {
    protocol         = "udp"
    port_range       = "51820"
    source_addresses = ["0.0.0.0/0", "::/0"]
  }
  
  # wg-easy admin interface (accessible from user IP and VPN network)
  inbound_rule {
    protocol         = "tcp"
    port_range       = "51821"
    source_addresses = [
      var.my_ip_cidr,
      "10.8.0.0/24"
    ]
  }
  
  # Outbound rules (allow all)
  outbound_rule {
    protocol              = "tcp"
    port_range            = "1-65535"
    destination_addresses = ["0.0.0.0/0", "::/0"]
  }
  
  outbound_rule {
    protocol              = "udp"
    port_range            = "1-65535"
    destination_addresses = ["0.0.0.0/0", "::/0"]
  }
  
  outbound_rule {
    protocol              = "icmp"
    destination_addresses = ["0.0.0.0/0", "::/0"]
  }
}

# Output values
output "vpn_server_ip" {
  value = digitalocean_droplet.vpn_server.ipv4_address
}

output "admin_ui_url" {
  value = "http://${digitalocean_droplet.vpn_server.ipv4_address}:51821"
}
